library(survMisc) # for Wilcoxon-Gehan-Breslow test
library(msm)
library(tableone)
library(compareGroups)
if (!require(kableExtra)) install.packages("kableExtra")
if (!require(flexsurv)) install.packages("flexsurv")
if (!require(survMisc)) install.packages("survMisc")
if (!require(msm)) install.packages("msm")
if (!require(tidyverse)) install.packages("tidyverse")
if (!require(tableone)) install.packages("tableone")
if (!require(compareGroups)) install.packages("compareGroups")
if (!require(table1)) install.packages("table1")
if (!require(compareGroups)) install.packages("compareGroups")
if (!require(knitr)) install.packages("knitr")
library(knitr)
knitr::opts_chunk$set(echo = TRUE)
if (!require(kableExtra)) install.packages("kableExtra")
if (!require(flexsurv)) install.packages("flexsurv")
if (!require(survMisc)) install.packages("survMisc")
if (!require(msm)) install.packages("msm")
if (!require(tidyverse)) install.packages("tidyverse")
if (!require(tableone)) install.packages("tableone")
if (!require(compareGroups)) install.packages("compareGroups")
if (!require(table1)) install.packages("table1")
if (!require(compareGroups)) install.packages("compareGroups")
library(tidyverse)
library(knitr)
library(kableExtra)
#source("getmedianres.R")
library(survival)
library(flexsurv)
library(survMisc) # for Wilcoxon-Gehan-Breslow test
library(msm)
library(tableone)
library(compareGroups)
if (!require(knitr)) install.packages("knitr")
library(knitr)
knitr::opts_chunk$set(echo = TRUE)
if (!require(kableExtra)) install.packages("kableExtra")
if (!require(flexsurv)) install.packages("flexsurv")
if (!require(survMisc)) install.packages("survMisc")
if (!require(msm)) install.packages("msm")
if (!require(tidyverse)) install.packages("tidyverse")
if (!require(tableone)) install.packages("tableone")
if (!require(compareGroups)) install.packages("compareGroups")
if (!require(table1)) install.packages("table1")
if (!require(compareGroups)) install.packages("compareGroups")
library(tidyverse)
library(knitr)
library(kableExtra)
#source("getmedianres.R")
library(survival)
library(flexsurv)
library(survMisc) # for Wilcoxon-Gehan-Breslow test
library(msm)
library(tableone)
library(compareGroups)
install.packages("officer")
library(tidyverse)
library(knitr)
library(kableExtra)
#source("getmedianres.R")
library(survival)
library(flexsurv)
library(survMisc) # for Wilcoxon-Gehan-Breslow test
library(msm)
library(tableone)
library(compareGroups)
library(tidyverse)
library(knitr)
library(kableExtra)
#source("getmedianres.R")
library(survival)
library(flexsurv)
library(survMisc) # for Wilcoxon-Gehan-Breslow test
library(msm)
library(tableone)
#library(compareGroups) - can't install package "officer"
library(table1)
link = "https://github.com/dmccoomes/Survival/raw/master/Final%20Project/Data/bmt.csv"
data <- read.csv(url(link), header=TRUE)
surv.luke.1 <- Surv(time=data$tdfs, event=data$deltadfs, type="right")
#fit KM curve
survfit.luke.1 <- survfit(surv.luke.1 ~ 1, data=data, conf.type="log-log")
summary(survfit.luke.1)
#plot KM curve
plot(survfit.luke.1,
conf.int=TRUE,
main="KM survival estimate of entire cohort (includes 95% CI)",
ylab = "Survival probability",
xlab = "Time (days)",
col = c("blue", "light blue", "light blue"),
lty = c("solid", "dashed", "dashed"),
lwd = c(2,1,1))
summary(survfit.luke.1)$table
CreateTableOne(data=data)
#run each cox ph model
covariates <- c("age", "male", "donorage", "donormale", "cmv", "donorcmv", "waittime", "disgroup", "fab", "mtx")
univ_formulas <- sapply(covariates,
function(x) as.formula(paste('surv.luke.1 ~', x)))
univ_models <- lapply(univ_formulas, function(x){coxph(x, data=data)})
#get results
univ_results <- lapply(univ_models,
function(x){
x <- summary(x)
p.value <- round(x$wald["pvalue"], 3)
wald.test <- round(x$wald["test"], 3)
beta <- signif(x$coef[1], 3);
HR <- round(x$coef[2], 3);
HR.confint.lower <- round(x$conf.int[,"lower .95"], 3)
HR.confint.upper <- round(x$conf.int[,"upper .95"], 3)
res <- c(HR, HR.confint.lower, HR.confint.upper, p.value)
names(res) <- c("HR", "95% CI lower", "95% CI upper", "p value")
return(res)
})
res <- t(as.data.frame(univ_results, check.names=FALSE))
#put results into a table
kable(res, caption="Cox PH HR using univariate model")  %>%
kable_styling(bootstrap_options = "striped", full_width = FALSE, position="left") %>%
column_spec(1, width="4cm") %>%
row_spec(9:10, bold=T)
#first, fit a Cox PH model including all baseline covariates
model.base.1 <- coxph(surv.luke.1 ~ age + male + donorage + donormale + cmv + donorcmv + waittime + disgroup + fab + mtx, data=data)
summary(model.base.1)
#trying a Cox PH model that includes hospital as a stratified variable
model.base.2 <- coxph(surv.luke.1 ~ age + male + donorage + donormale + cmv + donorcmv + waittime + disgroup + fab + mtx + strata(hospital), data=data)
#creating Cox PH model that includes country as a stratified variable
#creating country variable
data$country_us = ifelse((data$hospital==1 | data$hospital==4), 1, 0)
model.base.3 <- coxph(surv.luke.1 ~ age + male + donorage + donormale + cmv + donorcmv + waittime + disgroup + fab + mtx + strata(country_us), data=data)
#Creating model with just FAB and not including disease group
model.base.4 <- coxph(surv.luke.1 ~ age + male + donorage + donormale + cmv + donorcmv + waittime + fab + mtx, data=data)
summary(model.base.4)
#second, are any of these variables associated with difference by themselves - I did this in the box above
# model.base.age <- coxph(surv.luke.1 ~ age, data=data)
# model.base.male <- coxph(surv.luke.1 ~ male, data=data)
# model.base.donorage <- coxph(surv.luke.1 ~ donorage, data=data)
# model.base.donormale <- coxph(surv.luke.1 ~ donormale, data=data)
# model.base.cmv <- coxph(surv.luke.1 ~ cmv, data=data)
# model.base.donorcmv <- coxph(surv.luke.1 ~ donorcmv, data=data)
# model.base.waittime <- coxph(surv.luke.1 ~ waittime, data=data)
# model.base.disgroup <- coxph(surv.luke.1 ~ disgroup, data=data)
# model.base.fab <- coxph(surv.luke.1 ~ fab, data=data)
# model.base.mtx <- coxph(surv.luke.1 ~ mtx, data=data)
#
# summary(model.base.age)
# summary(model.base.male)
# summary(model.base.donorage)
# summary(model.base.donormale)
# summary(model.base.cmv)
# summary(model.base.donorcmv)
# summary(model.base.waittime)
# summary(model.base.disgroup)
# summary(model.base.fab)
# summary(model.base.mtx)
#build table of z-scores for individual models
summary(model.base.1)
#mtx doesn't vary by hospital - only the hospitals in Australia used MTX as a prophylactic
#this means that we can't include MTX and hospital in the analysis - they are the same
summary(model.base.2)
summary(model.base.3)
#FAB is significant (0.0160) and MTX is significant (0.080).
p.value <- as.data.frame(summary(model.base.1)$coefficients[,5])
HR <- as.data.frame(summary(model.base.1)$coefficients[,2])
conf.int.low <- as.data.frame(summary(model.base.1)$conf.int[,3])
conf.int.high <- as.data.frame(summary(model.base.1)$conf.int[,4])
est <- cbind(HR, conf.int.low, conf.int.high, p.value)
names(est) <- c("HR", "HR 95% CI low", "HR 95% CI high", "p value")
est <- round(est, digits=3)
kable(est, caption="Cox PH HR using multivariate model")  %>%
kable_styling(bootstrap_options = "striped", full_width = FALSE, position="left") %>%
column_spec(1, width="4cm") %>%
row_spec(9:10, bold=T)
survdiff(surv.luke.1 ~ male, data=data, rho=0)             #p-value 0.3
survdiff(surv.luke.1 ~ donormale, data=data, rho=0)        #        1
survdiff(surv.luke.1 ~ disgroup, data=data, rho=0)         #        0.001**
survdiff(surv.luke.1 ~ cmv, data=data, rho=0)              #        0.5
survdiff(surv.luke.1 ~ donorcmv, data=data, rho=0)         #        0.8
survdiff(surv.luke.1 ~ fab, data=data, rho=0)              #        0.004**
survdiff(surv.luke.1 ~ mtx, data=data, rho=0)              #        0.09*
survfit.luke.disgroup <- survfit(surv.luke.1 ~ disgroup, data=data, conf.type="log-log")
plot(survfit.luke.disgroup,
fun="cumhaz",
col=c("blue", "red", "orange"), lwd=2, lty=c("solid", "solid", "dashed"),
xlab="Time (in days)", ylab="Cumulative Hazard", main="Nelson-Aalen cumulative hazard estimates by disease group")
legend("topleft", c("ALL", "AML low", "AML high"), col=c("blue", "red", "orange"), lwd=c(2,2,2), lty=c("solid", "solid", "dashed"))
survfit.luke.fab <- survfit(surv.luke.1 ~ fab, data=data, conf.type="log-log")
plot(survfit.luke.fab,
fun="cumhaz",
col=c("blue", "red"), lwd=2, lty=c("solid", "solid"),
xlab="Time (in days)", ylab="Cumulative Hazard", main="Nelson-Aalen cumulative hazard estimates by FAB")
legend("topleft", c("FAB 4 or 5 & AML", "other"), col=c("blue", "red"), lwd=c(2,2), lty=c("solid", "solid"))
survfit.luke.mtx <- survfit(surv.luke.1 ~ mtx, data=data, conf.type="log-log")
plot(survfit.luke.mtx,
fun="cumhaz",
col=c("blue", "red"), lwd=2, lty=c("solid", "solid"),
xlab="Time (in days)", ylab="Cumulative Hazard", main="Nelson-Aalen cumulative hazard estimates by MTX")
legend("bottomright", c("No methotrexate use", "Methotrexate use"), col=c("blue", "red"), lwd=c(2,2), lty=c("solid", "solid"))
#plot KM curve
plot(survfit.luke.disgroup,
conf.int=FALSE,
main="KM survival estimate by disease group",
ylab = "Survival probability",
xlab = "Time (days)",
col = c("blue", "orange", "red"),
lty = c("solid", "dashed", "solid"),
lwd = c(2,2,2))
legend("topright", c("ALL", "AML low", "AML high"), col=c("blue", "orange", "red"), lwd=c(2,2,2), lty=c("solid", "dashed", "solid"))
plot(survfit.luke.fab,
conf.int=FALSE,
main="KM survival estimate by FAB classification",
ylab = "Survival probability",
xlab = "Time (days)",
col = c("blue", "red"),
lty = c("solid", "dashed"),
lwd = c(2,2))
legend("topright", c("FAB 4 or 5 & AML", "other"), col=c("blue", "red"), lwd=c(2,2), lty=c("solid", "dashed"))
plot(survfit.luke.mtx,
conf.int=FALSE,
main="KM survival estimate by Methotrexate use",
ylab = "Survival probability",
xlab = "Time (days)",
col = c("blue", "red"),
lty = c("solid", "dashed"),
lwd = c(2,2))
legend("topright", c("No methotrexate use", "Methotrexate use"), col=c("blue", "red"), lwd=c(2,2), lty=c("solid", "dashed"))
library(survMisc)
survfit.luke.male <- survfit(surv.luke.1 ~ male, data=data, conf.type="log-log")
survfit.luke.donormale <- survfit(surv.luke.1 ~ donormale, data=data, conf.type="log-log")
survfit.luke.cmv <- survfit(surv.luke.1 ~ cmv, data=data, conf.type="log-log")
survfit.luke.donorcmv <- survfit(surv.luke.1 ~ donorcmv, data=data, conf.type="log-log")
survfit.luke.mtx <- survfit(surv.luke.1 ~ mtx, data=data, conf.type="log-log")
comp(ten(survfit.luke.male))$tests          #p-value = 0.236
comp(ten(survfit.luke.donormale))$tests     #          0.930
comp(ten(survfit.luke.disgroup))$tests      #          0.051*
comp(ten(survfit.luke.cmv))$tests           #          0.397
comp(ten(survfit.luke.donorcmv))$tests      #          0.744
comp(ten(survfit.luke.fab))$tests           #          0.008**
comp(ten(survfit.luke.mtx))$tests           #          0.019**
#setting up TVC dataset
luke.tvc = tmerge(data1=data,
data2=data,
id=id,
deltadfs=event(tdfs, deltadfs),
post_tp=tdc(tp))
#fitting TVC Cox PH model with no covariates
surv.luke.tvc <- Surv(luke.tvc$tstart, luke.tvc$tstop, luke.tvc$deltadfs)
model.tvc <- coxph(surv.luke.tvc ~ post_tp, data=luke.tvc)
summary(model.tvc)
model.tvc.cov <- coxph(surv.luke.tvc ~ post_tp + age + donorage + fab + male + donormale + waittime + cmv + donorcmv + mtx, data=luke.tvc)
summary(model.tvc.cov)
summary(model.tvc)
summary(model.tvc.cov)
model.tvc.cov.strata <- coxph(surv.luke.tvc ~ post_tp + age + donorage + male + donormale + waittime + strata(cmv) + strata(mtx), data=luke.tvc)
summary(model.tvc.cov.strata)
model.tvc.cov.strata <- coxph(surv.luke.tvc ~ post_tp + age + donorage + male + donormale + waittime + strata(cmv) + strata(mtx)  + strata(donormtx), data=luke.tvc)
model.tvc.cov.strata <- coxph(surv.luke.tvc ~ post_tp + age + donorage + male + donormale + waittime + strata(cmv) + strata(mtx)  + strata(donorcmv), data=luke.tvc)
summary(model.tvc.cov.strata)
luke.tvc$fab_tp <- luke.tvc$fab*luke.tvc$tp
luke.tvc$age_tp <- luke.tvc$age*luke.tvc$tp
luke.tvc$donorage_tp <- luke.tvc$donorage*luke.tvc$tp
luke.tvc$male_tp <- luke.tvc$male*luke.tvc$tp
luke.tvc$donormale_tp <- luke.tvc$donormale*luke.tvc$tp
luke.tvc$cmv_tp <- luke.tvc$cmv*luke.tvc$tp
luke.tvc$donorcmv_tp <- luke.tvc$donorcmv*luke.tvc$tp
luke.tvc$mtx_tp <- luke.tvc$mtx*luke.tvc$tp
luke.tvc$waittime_tp <- luke.tvc$waittime*luke.tvc$tp
model.tvc.int <- coxph(surv.luke.tvc ~ post_tp + fab_tp + age_tp + donorage_tp + male_tp + donormale_tp + cmv_tp + donorcmv_tp +mtx_tp + waittime_tp, data=luke.tvc)
summary(model.tvc.int)
luke.tvc$fab_tp <- luke.tvc$fab*luke.tvc$post_tp
luke.tvc$age_tp <- luke.tvc$age*luke.tvc$post_tp
luke.tvc$donorage_tp <- luke.tvc$donorage*luke.tvc$post_tp
luke.tvc$male_tp <- luke.tvc$male*luke.tvc$post_tp
luke.tvc$donormale_tp <- luke.tvc$donormale*luke.tvc$post_tp
luke.tvc$cmv_tp <- luke.tvc$cmv*luke.tvc$post_tp
luke.tvc$donorcmv_tp <- luke.tvc$donorcmv*luke.tvc$post_tp
luke.tvc$mtx_tp <- luke.tvc$mtx*luke.tvc$post_tp
luke.tvc$waittime_tp <- luke.tvc$waittime*luke.tvc$post_tp
#with interaction terms
model.tvc.int <- coxph(surv.luke.tvc ~ post_tp + fab_tp + age_tp + donorage_tp + male_tp + donormale_tp + cmv_tp + donorcmv_tp +mtx_tp + waittime_tp, data=luke.tvc)
summary(model.tvc.int)
model.tvc.int.2 <- coxph(surv.luke.tvc ~ post_tp + age*post_tp + donorage*post_tp, data=luke.tvc)
summary(model.tvc.int.2)
model.tvc.int.2 <- coxph(surv.luke.tvc ~ post_tp + age*post_tp + donorage*post_tp + male*post_tp + donormale*post_tp + waitime*post_tp + cmv*post_tp + donorcmv*post_tp + mtx*post_tp, data=luke.tvc)
model.tvc.int.2 <- coxph(surv.luke.tvc ~ post_tp + age*post_tp + donorage*post_tp + male*post_tp + donormale*post_tp + waittime*post_tp + cmv*post_tp + donorcmv*post_tp + mtx*post_tp, data=luke.tvc)
summary(model.tvc.int.2)
summary(luke.tvc$age)
summary(luke.tvc$donorage)
model.tvc.int.2 <- coxph(surv.luke.tvc ~ post_tp + age*post_tp + donorage*post_tp + male*post_tp + donormale*post_tp + waittime*post_tp + cmv*post_tp + donorcmv*post_tp + mtx*post_tp + fab*post_tp, data=luke.tvc)
summary(model.tvc.int.2)
model.tvc.int.3 <- coxph(surv.luke.tvc ~ post_tp + age*post_tp + donorage*post_tp + male*post_tp + donormale*post_tp + waittime*post_tp + strata(cmv*post_tp) + donorcmv*post_tp + mtx*post_tp + fab*post_tp, data=luke.tvc)
summary(model.tvc.int.3)
#stratified and interactions
model.tvc.int.3 <- coxph(surv.luke.tvc ~ post_tp + age*post_tp + donorage*post_tp + male*post_tp + donormale*post_tp + waittime*post_tp + cmv*post_tp + strata(cmv) + donorcmv*post_tp + mtx*post_tp + fab*post_tp, data=luke.tvc)
summary(model.tvc.int.3)
model.tvc.int.3 <- coxph(surv.luke.tvc ~ post_tp + age*post_tp + donorage*post_tp + male + donormale + waittime + cmv*post_tp + strata(cmv) + donorcmv*post_tp +strata(donorcmv) + mtx + fab*post_tp, data=luke.tvc)
summary(model.tvc.int.3)
model.tvc.int.3 <- coxph(surv.luke.tvc ~ post_tp + age*post_tp + donorage*post_tp + male + donormale + waittime + cmv*post_tp + strata(cmv) + donorcmv*post_tp +strata(donorcmv) + mtx + fab*post_tp + disgroup*post_tp, data=luke.tvc)
summary(model.tvc.int.3)
model.tvc.int.3 <- coxph(surv.luke.tvc ~ post_tp + age*post_tp + donorage*post_tp + male + donormale + waittime + cmv*post_tp + strata(cmv) + donorcmv*post_tp +strata(donorcmv) + strata(mtx) + fab*post_tp, data=luke.tvc)
summary(model.tvc.int.3)
model.tvc.int.3 <- coxph(surv.luke.tvc ~ post_tp + age*post_tp + donorage*post_tp + male + donormale + waittime + cmv*post_tp + strata(cmv) + donorcmv*post_tp +strata(donorcmv) + strata(mtx) + disgroup*post_tp, data=luke.tvc)
summary(model.tvc.int.3)
model.tvc.int.3 <- coxph(surv.luke.tvc ~ post_tp + age*post_tp + donorage*post_tp + male + donormale + waittime + cmv*post_tp + strata(cmv) + donorcmv*post_tp +strata(donorcmv) + strata(mtx) + disgroup*post_tp + fab*post_tp, data=luke.tvc)
summary(model.tvc.int.3)
model.tvc.int.3 <- coxph(surv.luke.tvc ~ post_tp + age*post_tp + donorage*post_tp + male + donormale + waittime + cmv*post_tp + strata(cmv) + donorcmv*post_tp +strata(donorcmv) + strata(mtx) +  strata(fab), data=luke.tvc)
summary(model.tvc.int.3)
model.tvc.int.3 <- coxph(surv.luke.tvc ~ post_tp + age*post_tp + donorage*post_tp + strata(male) + strata(donormale) + waittime + strata(cmv) + strata(donorcmv) + strata(mtx) +  strata(fab), data=luke.tvc)
summary(model.tvc.int.3)
model.tvc.int.3 <- coxph(surv.luke.tvc ~ post_tp + age*post_tp + donorage*post_tp + strata(male) + strata(donormale) + waittime + strata(cmv) + strata(donorcmv) + strata(mtx) + fab, data=luke.tvc)
summary(model.tvc.int.3)
model.tvc.int.3 <- coxph(surv.luke.tvc ~ post_tp + age*post_tp + donorage*post_tp + strata(male) + strata(donormale) + waittime + strata(cmv) + strata(donorcmv) + strata(mtx) + fab*post_tp, data=luke.tvc)
summary(model.tvc.int.3)
model.tvc.int.3 <- coxph(surv.luke.tvc ~ post_tp + age*post_tp + donorage*post_tp + male + donormale + waittime + cmv + donorcmv + mtx + strata(fab), data=luke.tvc)
summary(model.tvc.int.3)
model.tvc.int.3 <- coxph(surv.luke.tvc ~ post_tp + age*post_tp + donorage*post_tp + male + donormale + waittime + cmv + donorcmv + mtx + fab, data=luke.tvc)
summary(model.tvc.int.3)
model.tvc.cov.strata <- coxph(surv.luke.tvc ~ post_tp + age + donorage + male + donormale + waittime + strata(cmv) + strata(mtx)  + strata(donorcmv) + strata(fab), data=luke.tvc)
summary(model.tvc.cov.strata)
model.tvc.cov <- coxph(surv.luke.tvc ~ post_tp + age + donorage + fab + male + donormale + waittime + cmv + donorcmv + mtx, data=luke.tvc)
summary(model.tvc.cov)
model.tvc.int.3 <- coxph(surv.luke.tvc ~ post_tp + age*post_tp + donorage*post_tp + male + donormale + waittime + cmv + donorcmv + mtx + fab, data=luke.tvc)
summary(model.tvc.int.3)
summary(luke.tvc$age)
luke.tvc$age_cat <- quanttile(luke.tvc$age, probs=seq(0, 60, 10))
luke.tvc$age_cat <- quantile(luke.tvc$age, probs=seq(0, 60, 10))
luke.tvc$age_cat <- quantcut(luke.tvc$age, q=seq(0, 60, 10))
install.packages("gtools")
library(gtools)
luke.tvc$age_cat <- quantcut(luke.tvc$age, q=seq(0, 60, 10))
luke.tvc$age_cat <- quantcut(luke.tvc$age, q=seq(0, 60, 10))
luke.tvc$age_cat <- quantcut(luke.tvc$age, q=seq(0, 60, by=10))
luke.tvc$age_cat <- quantcut(luke.tvc$age, q=5)
summary(luke.tvc$age_cat)
luke.tvc$age_cat <- quantcut(luke.tvc$age, q=seq(0,1, by=0.25))
summary(luke.tvc$age_cat)
luke.tvc$age_cat <- cut(luke.tvc$age, seq=c(0, 60, 10))
luke.tvc$age_cat <- cut(luke.tvc$age, seq(0, 60, 10))
summary(luke.tvc$age_cat)
library(gtools)
luke.tvc$age_cat <- cut(luke.tvc$age, seq(0, 60, 10))
luke,tvc$donorage_cat <- cut(luke.tvc$donorage, seq(0, 60, 10))
library(gtools)
luke.tvc$age_cat <- cut(luke.tvc$age, seq(0, 60, 10))
luke.tvc$donorage_cat <- cut(luke.tvc$donorage, seq(0, 60, 10))
luke.tvc$age_cat <- cut(luke.tvc$age, c(0, 20, 30, 40, 50))
summary(luke.tvc$age_cat)
luke.tvc$age_cat <- cut(luke.tvc$age, c(0, 20, 30, 40, 60))
summary(luke.tvc$age_cat)
library(gtools)
luke.tvc$age_cat <- cut(luke.tvc$age, seq(0, 60, 10))
luke.tvc$donorage_cat <- cut(luke.tvc$donorage, seq(0, 60, 10))
#combining lowest and highest categories with cat next to them
luke.tvc$age_cat <- cut(luke.tvc$age, c(0, 20, 30, 40, 60))
luke.tvc$donorage_cat <- cut(luke.tvc$donorage, c(0, 20, 30, 40, 60))
library(gtools)
luke.tvc$age_cat <- cut(luke.tvc$age, seq(0, 60, 10))
luke.tvc$donorage_cat <- cut(luke.tvc$donorage, seq(0, 60, 10))
#combining lowest and highest categories with cat next to them
luke.tvc$age_cat <- cut(luke.tvc$age, c(0, 20, 30, 40, 60))
luke.tvc$donorage_cat <- cut(luke.tvc$donorage, c(0, 20, 30, 40, 60))
model.tvc.int.4 <- coxph(surv.luke.tvc ~ post_tp + age_cat*post_tp + donorage_cat*post_tp + male + donormale + waittime + cmv + donorcmv + mtx + fab, data=luke.tvc)
summary(model.tvc.int.4)
est.20 <- exp(coef(model.tvc.int.4)["post_tp"] +
coef(model.tvc.int.4)["age_cat(20,30)"] +
coef(model.tvc.int.4)["post_tp:age_cat(20,30)"])
est.20
library(gtools)
luke.tvc$age_cat <- cut(luke.tvc$age, seq(0, 60, 10))
luke.tvc$donorage_cat <- cut(luke.tvc$donorage, seq(0, 60, 10))
#combining lowest and highest categories with cat next to them
luke.tvc$age_cat <- cut(luke.tvc$age, c(0, 20, 30, 40, 60))
luke.tvc$donorage_cat <- cut(luke.tvc$donorage, c(0, 20, 30, 40, 60))
model.tvc.int.4 <- coxph(surv.luke.tvc ~ post_tp + age_cat*post_tp + donorage_cat*post_tp + male + donormale + waittime + cmv + donorcmv + mtx + fab, data=luke.tvc)
summary(model.tvc.int.4)
est.20 <- exp(coef(model.tvc.int.4)["post_tp"] +
coef(model.tvc.int.4)["age_cat(20,30)"] +
coef(model.tvc.int.4)["post_tp:age_cat(20,30)"])
est.20
as.numeric(est.20)
est.20 <- exp(coef(model.tvc.int.4)["post_tp"] +
coef(model.tvc.int.4)["age_cat"] +
coef(model.tvc.int.4)["post_tp:age_cat"])
as.numeric(est.20)
est.20 <- exp(coef(model.tvc.int.4)["post_tp"] +
coef(model.tvc.int.4)["age_cat(20,30]"] +
coef(model.tvc.int.4)["post_tp:age_cat(20,30]"])
as.numeric(est.20)
luke.tvc$donorage_cat <- cut(luke.tvc$donorage, c(0, 20, 30, 40, 60))
luke.tvc$age_bin <- as.numeric(luke.tvc$age_cat)
luke.tvc$donorage_bin <- as.numeric(luke.tvc$donorage_cat)
model.tvc.int.5 <- coxph(surv.luke.tvc ~ post_tp + age_bin*post_tp + donorage_bin*post_tp + male + donormale + waittime + cmv + donorcmv + mtx + fab, data=luke.tvc)
summary(model.tvc.int.5)
model.tvc.int.3 <- coxph(surv.luke.tvc ~ post_tp + age*post_tp + donorage*post_tp + male + donormale + waittime + cmv + donorcmv + mtx + fab, data=luke.tvc)
summary(model.tvc.int.3)
est.age <- exp(coef(model.tvc.int.3)["post_tp"] +
coef(model.tvc.int.3)["age"] +
coef(model.tvc.int.3)["post_tp:age"])
as.numeric(est.age)
model.tvc.int.5 <- coxph(surv.luke.tvc ~ post_tp + age_bin*post_tp + donorage_bin*post_tp + male + donormale + waittime + cmv + donorcmv + mtx + fab, data=luke.tvc)
summary(model.tvc.int.5)
est.20 <- exp(coef(model.tvc.int.5)["post_tp"] +
coef(model.tvc.int.5)["post_tp:age_bin"])
as.numeric(est.20)
est.20 <- exp(coef(model.tvc.int.5)["post_tp"] +
coef(model.tvc.int.5)["post_tp:age_bin"])
se.20 <- deltamethod(g=~exp((x1 + x11)),
mean=coef(model.tvc.int.5)[c("post_tp", "post_tp:age_bin")],
cov=vcov(model.tvc.int.5)[c("post_tp", "post_tp:age_bin"),
c("post_tp", "post_tp:age_bin")],
ses=TRUE)
se.20 <- deltamethod(g=~exp((x1 + x2)),
mean=coef(model.tvc.int.5)[c("post_tp", "post_tp:age_bin")],
cov=vcov(model.tvc.int.5)[c("post_tp", "post_tp:age_bin"),
c("post_tp", "post_tp:age_bin")],
ses=TRUE)
se.20 <- deltamethod(g=~exp((x1 + x3)),
mean=coef(model.tvc.int.5)[c("post_tp", "post_tp:age_bin")],
cov=vcov(model.tvc.int.5)[c("post_tp", "post_tp:age_bin"),
c("post_tp", "post_tp:age_bin")],
ses=TRUE)
est.20 <- exp(coef(model.tvc.int.5)["post_tp"] +
coef(model.tvc.int.5)["post_tp:age_bin"])
se.20 <- deltamethod(g=~exp((x1 + x2)),
mean=coef(model.tvc.int.5)[c("post_tp", "post_tp:age_bin")],
cov=vcov(model.tvc.int.5)[c("post_tp", "post_tp:age_bin"),
c("post_tp", "post_tp:age_bin")],
ses=TRUE)
est.20 <- exp(coef(model.tvc.int.5)["post_tp"] +
coef(model.tvc.int.5)["post_tp:age_bin"])
se.20 <- deltamethod(g=~exp((x1 + x2)),
mean=coef(model.tvc.int.5)[c("post_tp", "post_tp:age_bin")],
cov=vcov(model.tvc.int.5)[c("post_tp", "post_tp:age_bin"),
c("post_tp", "post_tp:age_bin")],
ses=TRUE)
#age group 20-30
as.numeric(est.20)
as.numeric(c(est.20 - 1.96*se.20,
est.20 + 1.96*se.20))
est.30 <- exp(coef(model.tvc.int.5)["post_tp"] +
2*coef(model.tvc.int.5)["post_tp:age_bin"])
se.30 <- deltamethod(g=~exp((x1 + 2*x2)),
mean=coef(model.tvc.int.5)[c("post_tp", "post_tp:age_bin")],
cov=vcov(model.tvc.int.5)[c("post_tp", "post_tp:age_bin"),
c("post_tp", "post_tp:age_bin")],
ses=TRUE)
#age group 20-30
as.numeric(est.30)
as.numeric(c(est.30 - 1.96*se.30,
est.30 + 1.96*se.30))
est.40 <- exp(coef(model.tvc.int.5)["post_tp"] +
3*coef(model.tvc.int.5)["post_tp:age_bin"])
se.40 <- deltamethod(g=~exp((x1 + 3*x2)),
mean=coef(model.tvc.int.5)[c("post_tp", "post_tp:age_bin")],
cov=vcov(model.tvc.int.5)[c("post_tp", "post_tp:age_bin"),
c("post_tp", "post_tp:age_bin")],
ses=TRUE)
#age group 40-50
as.numeric(est.40)
as.numeric(c(est.40 - 1.96*se.40,
est.40 + 1.96*se.40))
est.50 <- exp(coef(model.tvc.int.5)["post_tp"] +
4*coef(model.tvc.int.5)["post_tp:age_bin"])
se.50 <- deltamethod(g=~exp((x1 + 4*x2)),
mean=coef(model.tvc.int.5)[c("post_tp", "post_tp:age_bin")],
cov=vcov(model.tvc.int.5)[c("post_tp", "post_tp:age_bin"),
c("post_tp", "post_tp:age_bin")],
ses=TRUE)
#age group 20-30
as.numeric(est.50)
as.numeric(c(est.50 - 1.96*se.50,
est.50 + 1.96*se.50))
model.tvc.int.3 <- coxph(surv.luke.tvc ~ post_tp + age*post_tp + donorage*post_tp + male + donormale + waittime + cmv + donorcmv + mtx + fab, data=luke.tvc)
summary(model.tvc.int.3)
luke.tvc$age_old <- ifelse(luke.tvc$age >28, 1, 0)
summary(luke.tvc$age_old)
luke.tvc$age_old <- ifelse(luke.tvc$age >28, 1, 0)
luke.tvc$donorage_old <- ifelse(luke.tvc$donorage >28, 1, 0)
model.tvc.int.6 <- coxph(surv.luke.tvc ~ post_tp + age_binary*post_tp + donorage_binary*post_tp + male + donormale + waittime + cmv + donorcmv + mtx + fab, data=luke.tvc)
model.tvc.int.6 <- coxph(surv.luke.tvc ~ post_tp + age_old*post_tp + donorage_old*post_tp + male + donormale + waittime + cmv + donorcmv + mtx + fab, data=luke.tvc)
summary(model.tvc.int.5)
model.tvc.int.6 <- coxph(surv.luke.tvc ~ post_tp + age_old*post_tp + donorage_old*post_tp + male + donormale + waittime + cmv + donorcmv + mtx + fab, data=luke.tvc)
summary(model.tvc.int.6)
model.tvc.int.6 <- coxph(surv.luke.tvc ~ post_tp + age + donorage + fab*post_tp + male + donormale + waittime + cmv + donorcmv + mtx + fab, data=luke.tvc)
summary(model.tvc.int.6)
model.tvc.int.6 <- coxph(surv.luke.tvc ~ post_tp + age + donorage + fab*post_tp + male + donormale + waittime + cmv + donorcmv + mtx, data=luke.tvc)
summary(model.tvc.int.6)
model.tvc.int.3 <- coxph(surv.luke.tvc ~ post_tp + age*post_tp + donorage*post_tp + male + donormale + waittime + cmv + donorcmv + mtx + fab, data=luke.tvc)
summary(model.tvc.int.3)
model.tvc.int.6 <- coxph(surv.luke.tvc ~ post_tp + age + donorage + fab*post_tp + male + donormale + waittime + cmv + donorcmv + mtx, data=luke.tvc)
summary(model.tvc.int.6)
model.tvc.int.6 <- coxph(surv.luke.tvc ~ post_tp + age*post_tp + donorage*post_tp + fab*post_tp + male + donormale + waittime + cmv + donorcmv + mtx, data=luke.tvc)
summary(model.tvc.int.6)
model.tvc.int.6 <- coxph(surv.luke.tvc ~ post_tp + age*post_tp + donorage*post_tp + fab + male + donormale + waittime + cmv + donorcmv + mtx, data=luke.tvc)
summary(model.tvc.int.6)
model.tvc.cov.strata <- coxph(surv.luke.tvc ~ post_tp + age + donorage + male + donormale + waittime + strata(cmv) + strata(mtx)  + strata(donorcmv) + strata(fab), data=luke.tvc)
summary(model.tvc.cov.strata)
model.tvc.cov.strata <- coxph(surv.luke.tvc ~ post_tp + age*post_tp + donorage + male + donormale + waittime + strata(cmv) + strata(mtx)  + strata(donorcmv) + strata(fab), data=luke.tvc)
summary(model.tvc.cov.strata)
model.tvc.cov.strata <- coxph(surv.luke.tvc ~ post_tp + age*post_tp + donorage*post_tp + male + donormale + waittime + strata(cmv) + strata(mtx)  + strata(donorcmv) + strata(fab), data=luke.tvc)
summary(model.tvc.cov.strata)
model.tvc.cov.strata <- coxph(surv.luke.tvc ~ post_tp + age + donorage*post_tp + male + donormale + waittime + strata(cmv) + strata(mtx)  + strata(donorcmv) + strata(fab), data=luke.tvc)
summary(model.tvc.cov.strata)
model.tvc.cov.strata.2 <- coxph(surv.luke.tvc ~ post_tp + new_age + new_donorage*post_tp + male + donormale + waittime + strata(cmv) + strata(mtx)  + strata(donorcmv) + strata(fab), data=luke.tvc)
luke.tvc$new_age <- luke.tvc$age - 28
luke.tvc$new_donorage <- luke.tvc$donorage - 28
model.tvc.cov.strata.2 <- coxph(surv.luke.tvc ~ post_tp + new_age + new_donorage*post_tp + male + donormale + waittime + strata(cmv) + strata(mtx)  + strata(donorcmv) + strata(fab), data=luke.tvc)
summary(model.tvc.cov.strata.2)
model.tvc.cov.strata.2 <- coxph(surv.luke.tvc ~ post_tp + new_age*post_tp + new_donorage*post_tp + male + donormale + waittime + strata(cmv) + strata(mtx)  + strata(donorcmv) + strata(fab), data=luke.tvc)
summary(model.tvc.cov.strata.2)
model.tvc.cov.strata.2 <- coxph(surv.luke.tvc ~ post_tp + new_age*post_tp + new_donorage*post_tp + male + donormale + waittime + strata(cmv) + strata(mtx)  + strata(donorcmv) + strata(fab) + fab*post_tp, data=luke.tvc)
summary(model.tvc.cov.strata.2)
