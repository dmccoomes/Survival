HR <- round(summary(model.base.1)$coef[,2], 3)
HR
p.value <- as.vector(summary(model.base.1)$coefficients[,5])
p.value
p.value <- as.vector(summary(model.base.1)$coefficients[,5])
HR <- as.vector(summary(model.base.1)$coefficients[,2])
conf.int.low <- as.vector(summary(model.base.1)$conf.int[,3])
conf.int.high <- as.vector(summary(model.base.1)$conf.int[,4])
est <- c(HR, conf.int.low, conf.int.high, p.value)
p.value <- as.vector(summary(model.base.1)$coefficients[,5])
HR <- as.vector(summary(model.base.1)$coefficients[,2])
conf.int.low <- as.vector(summary(model.base.1)$conf.int[,3])
conf.int.high <- as.vector(summary(model.base.1)$conf.int[,4])
est <- c(HR, conf.int.low, conf.int.high, p.value)
est
est <- as.data.frame(HR, conf.int.low, conf.int.high, p.value)
est
p.value <- as.data.frame(summary(model.base.1)$coefficients[,5])
p.value
p.value <- as.data.frame(summary(model.base.1)$coefficients[,5])
HR <- as.data.frame(summary(model.base.1)$coefficients[,2])
conf.int.low <- as.data.frame(summary(model.base.1)$conf.int[,3])
conf.int.high <- as.data.frame(summary(model.base.1)$conf.int[,4])
p.value
est <- as.data.frame(HR, conf.int.low, conf.int.high, p.value)
est <- merge(HR, conf.int.low, conf.int.high, p.value)
est <- merge(HR, conf.int.low)
est
conf.int.low
p.value
est <- cbind(HR, conf.int.low, conf.int.high, p.value)
est
p.value <- as.data.frame(summary(model.base.1)$coefficients[,5])
HR <- as.data.frame(summary(model.base.1)$coefficients[,2])
conf.int.low <- as.data.frame(summary(model.base.1)$conf.int[,3])
conf.int.high <- as.data.frame(summary(model.base.1)$conf.int[,4])
est <- cbind(HR, conf.int.low, conf.int.high, p.value)
names(est) <- c("HR", "HR 95% CI low", "HR 95% CI high", "p value")
est
summary(model.base.1)
p.value <- as.data.frame(round(summary(model.base.1)$coefficients[,5]), 4)
HR <- as.data.frame(summary(model.base.1)$coefficients[,2])
conf.int.low <- as.data.frame(summary(model.base.1)$conf.int[,3])
conf.int.high <- as.data.frame(summary(model.base.1)$conf.int[,4])
est <- cbind(HR, conf.int.low, conf.int.high, p.value)
names(est) <- c("HR", "HR 95% CI low", "HR 95% CI high", "p value")
est
p.value <- as.data.frame(round(summary(model.base.1)$coefficients[,5]), 1)
HR <- as.data.frame(summary(model.base.1)$coefficients[,2])
conf.int.low <- as.data.frame(summary(model.base.1)$conf.int[,3])
conf.int.high <- as.data.frame(summary(model.base.1)$conf.int[,4])
est <- cbind(HR, conf.int.low, conf.int.high, p.value)
names(est) <- c("HR", "HR 95% CI low", "HR 95% CI high", "p value")
est
p.value <- as.data.frame(round(summary(model.base.1)$coefficients[,5]), 6)
HR <- as.data.frame(summary(model.base.1)$coefficients[,2])
conf.int.low <- as.data.frame(summary(model.base.1)$conf.int[,3])
conf.int.high <- as.data.frame(summary(model.base.1)$conf.int[,4])
est <- cbind(HR, conf.int.low, conf.int.high, p.value)
names(est) <- c("HR", "HR 95% CI low", "HR 95% CI high", "p value")
est
p.value <- as.data.frame(round(round(model.base.1)$coefficients[,5]), digits=3)
p.value <- round(as.data.frame(round(model.base.1)$coefficients[,5]), 3)
p.value <- round(as.data.frame(model.base.1)$coefficients[,5]), 3)
p.value <- round(as.data.frame((model.base.1)$coefficients[,5]), 3)
p.value <- as.data.frame(model.base.1)$coefficients[,5])
p.value <- as.data.frame(summary(model.base.1)$coefficients[,5])
HR <- as.data.frame(summary(model.base.1)$coefficients[,2])
conf.int.low <- as.data.frame(summary(model.base.1)$conf.int[,3])
conf.int.high <- as.data.frame(summary(model.base.1)$conf.int[,4])
est <- cbind(HR, conf.int.low, conf.int.high, p.value)
names(est) <- c("HR", "HR 95% CI low", "HR 95% CI high", "p value")
est
p.value <- as.data.frame(round(summary(model.base.1)$coefficients[,5]), 3)
HR <- as.data.frame(summary(model.base.1)$coefficients[,2])
conf.int.low <- as.data.frame(summary(model.base.1)$conf.int[,3])
conf.int.high <- as.data.frame(summary(model.base.1)$conf.int[,4])
est <- cbind(HR, conf.int.low, conf.int.high, p.value)
names(est) <- c("HR", "HR 95% CI low", "HR 95% CI high", "p value")
est
p.value <- as.data.frame(summary(model.base.1)$coefficients[,5])
HR <- as.data.frame(summary(model.base.1)$coefficients[,2])
conf.int.low <- as.data.frame(summary(model.base.1)$conf.int[,3])
conf.int.high <- as.data.frame(summary(model.base.1)$conf.int[,4])
est <- cbind(HR, conf.int.low, conf.int.high, p.value)
names(est) <- c("HR", "HR 95% CI low", "HR 95% CI high", "p value")
est <- round(est, digits=4)
p.value <- as.data.frame(summary(model.base.1)$coefficients[,5])
HR <- as.data.frame(summary(model.base.1)$coefficients[,2])
conf.int.low <- as.data.frame(summary(model.base.1)$conf.int[,3])
conf.int.high <- as.data.frame(summary(model.base.1)$conf.int[,4])
est <- cbind(HR, conf.int.low, conf.int.high, p.value)
names(est) <- c("HR", "HR 95% CI low", "HR 95% CI high", "p value")
est <- round(est, digits=4)
est
p.value <- as.data.frame(summary(model.base.1)$coefficients[,5])
HR <- as.data.frame(summary(model.base.1)$coefficients[,2])
conf.int.low <- as.data.frame(summary(model.base.1)$conf.int[,3])
conf.int.high <- as.data.frame(summary(model.base.1)$conf.int[,4])
est <- cbind(HR, conf.int.low, conf.int.high, p.value)
names(est) <- c("HR", "HR 95% CI low", "HR 95% CI high", "p value")
est <- round(est, digits=3)
est
p.value <- as.data.frame(summary(model.base.1)$coefficients[,5])
HR <- as.data.frame(summary(model.base.1)$coefficients[,2])
conf.int.low <- as.data.frame(summary(model.base.1)$conf.int[,3])
conf.int.high <- as.data.frame(summary(model.base.1)$conf.int[,4])
est <- cbind(HR, conf.int.low, conf.int.high, p.value)
names(est) <- c("HR", "HR 95% CI low", "HR 95% CI high", "p value")
est <- round(est, digits=3)
est
kable(est, "latex", booktabs=T)  %>%
kable_styling(full_width=T) %>%
column_spec(1, width="8cm")
p.value <- as.data.frame(summary(model.base.1)$coefficients[,5])
HR <- as.data.frame(summary(model.base.1)$coefficients[,2])
conf.int.low <- as.data.frame(summary(model.base.1)$conf.int[,3])
conf.int.high <- as.data.frame(summary(model.base.1)$conf.int[,4])
est <- cbind(HR, conf.int.low, conf.int.high, p.value)
names(est) <- c("HR", "HR 95% CI low", "HR 95% CI high", "p value")
est <- round(est, digits=3)
est
kable(est, booktabs=T)  %>%
kable_styling(full_width=T) %>%
column_spec(1, width="8cm")
p.value <- as.data.frame(summary(model.base.1)$coefficients[,5])
HR <- as.data.frame(summary(model.base.1)$coefficients[,2])
conf.int.low <- as.data.frame(summary(model.base.1)$conf.int[,3])
conf.int.high <- as.data.frame(summary(model.base.1)$conf.int[,4])
est <- cbind(HR, conf.int.low, conf.int.high, p.value)
names(est) <- c("HR", "HR 95% CI low", "HR 95% CI high", "p value")
est <- round(est, digits=3)
est
kable(est, caption="Cox PH HR using multivariate model")  %>%
kable_styling(full_width=T) %>%
column_spec(1, width="8cm")
p.value <- as.data.frame(summary(model.base.1)$coefficients[,5])
HR <- as.data.frame(summary(model.base.1)$coefficients[,2])
conf.int.low <- as.data.frame(summary(model.base.1)$conf.int[,3])
conf.int.high <- as.data.frame(summary(model.base.1)$conf.int[,4])
est <- cbind(HR, conf.int.low, conf.int.high, p.value)
names(est) <- c("HR", "HR 95% CI low", "HR 95% CI high", "p value")
est <- round(est, digits=3)
est
kable(est, caption="Cox PH HR using multivariate model")  %>%
kable_styling(bootstrap_options = "stripped") %>%
column_spec(1, width="8cm")
p.value <- as.data.frame(summary(model.base.1)$coefficients[,5])
HR <- as.data.frame(summary(model.base.1)$coefficients[,2])
conf.int.low <- as.data.frame(summary(model.base.1)$conf.int[,3])
conf.int.high <- as.data.frame(summary(model.base.1)$conf.int[,4])
est <- cbind(HR, conf.int.low, conf.int.high, p.value)
names(est) <- c("HR", "HR 95% CI low", "HR 95% CI high", "p value")
est <- round(est, digits=3)
est
kable(est, caption="Cox PH HR using multivariate model")  %>%
kable_styling(bootstrap_options = "striped") %>%
column_spec(1, width="8cm")
p.value <- as.data.frame(summary(model.base.1)$coefficients[,5])
HR <- as.data.frame(summary(model.base.1)$coefficients[,2])
conf.int.low <- as.data.frame(summary(model.base.1)$conf.int[,3])
conf.int.high <- as.data.frame(summary(model.base.1)$conf.int[,4])
est <- cbind(HR, conf.int.low, conf.int.high, p.value)
names(est) <- c("HR", "HR 95% CI low", "HR 95% CI high", "p value")
est <- round(est, digits=3)
est
kable(est, caption="Cox PH HR using multivariate model")  %>%
kable_styling(bootstrap_options = "striped", full_width = FALSE) %>%
column_spec(1, width="8cm")
#run each cox ph model
covariates <- c("age", "male", "donorage", "donormale", "cmv", "donorcmv", "waittime", "disgroup", "fab", "mtx")
univ_formulas <- sapply(covariates,
function(x) as.formula(paste('surv.luke.1 ~', x)))
univ_models <- lapply(univ_formulas, function(x){coxph(x, data=data)})
#get results
univ_results <- lapply(univ_models,
function(x){
x <- summary(x)
#p.value <- signif(x$wald["pvalue"], digits=3)
p.value <- round(x$wald["pvalue"], 3)
wald.test <- round(x$wald["test"], 3)
beta <- signif(x$coef[1], 3);
HR <- round(x$coef[2], 3);
HR.confint.lower <- round(x$conf.int[,"lower .95"], 3)
HR.confint.upper <- round(x$conf.int[,"upper .95"], 3)
#HR <- paste0(HR, " (",
#             HR.confint.lower, "-", HR.confint.upper, ")")
#res <- c(beta, HR, wald.test, p.value)       only including HR, 95% CI, and p value
res <- c(HR, HR.confint.lower, HR.confint.upper, p.value)
#names(res) <- c("beta", "HR (95% CI for HR", "wald.test", "p.value")
names(res) <- c("HR", "95% CI lower", "95% CI upper", "p value")
return(res)
})
res <- t(as.data.frame(univ_results, check.names=FALSE))
as.data.frame(res)
#run each cox ph model
covariates <- c("age", "male", "donorage", "donormale", "cmv", "donorcmv", "waittime", "disgroup", "fab", "mtx")
univ_formulas <- sapply(covariates,
function(x) as.formula(paste('surv.luke.1 ~', x)))
univ_models <- lapply(univ_formulas, function(x){coxph(x, data=data)})
#get results
univ_results <- lapply(univ_models,
function(x){
x <- summary(x)
#p.value <- signif(x$wald["pvalue"], digits=3)
p.value <- round(x$wald["pvalue"], 3)
wald.test <- round(x$wald["test"], 3)
beta <- signif(x$coef[1], 3);
HR <- round(x$coef[2], 3);
HR.confint.lower <- round(x$conf.int[,"lower .95"], 3)
HR.confint.upper <- round(x$conf.int[,"upper .95"], 3)
#HR <- paste0(HR, " (",
#             HR.confint.lower, "-", HR.confint.upper, ")")
#res <- c(beta, HR, wald.test, p.value)       only including HR, 95% CI, and p value
res <- c(HR, HR.confint.lower, HR.confint.upper, p.value)
#names(res) <- c("beta", "HR (95% CI for HR", "wald.test", "p.value")
names(res) <- c("HR", "95% CI lower", "95% CI upper", "p value")
return(res)
})
res <- t(as.data.frame(univ_results, check.names=FALSE))
as.data.frame(res)
kable(res, caption="Cox PH HR using multivariate model")  %>%
kable_styling(bootstrap_options = "striped", full_width = FALSE) %>%
column_spec(1, width="8cm")
#run each cox ph model
covariates <- c("age", "male", "donorage", "donormale", "cmv", "donorcmv", "waittime", "disgroup", "fab", "mtx")
univ_formulas <- sapply(covariates,
function(x) as.formula(paste('surv.luke.1 ~', x)))
univ_models <- lapply(univ_formulas, function(x){coxph(x, data=data)})
#get results
univ_results <- lapply(univ_models,
function(x){
x <- summary(x)
#p.value <- signif(x$wald["pvalue"], digits=3)
p.value <- round(x$wald["pvalue"], 3)
wald.test <- round(x$wald["test"], 3)
beta <- signif(x$coef[1], 3);
HR <- round(x$coef[2], 3);
HR.confint.lower <- round(x$conf.int[,"lower .95"], 3)
HR.confint.upper <- round(x$conf.int[,"upper .95"], 3)
#HR <- paste0(HR, " (",
#             HR.confint.lower, "-", HR.confint.upper, ")")
#res <- c(beta, HR, wald.test, p.value)       only including HR, 95% CI, and p value
res <- c(HR, HR.confint.lower, HR.confint.upper, p.value)
#names(res) <- c("beta", "HR (95% CI for HR", "wald.test", "p.value")
names(res) <- c("HR", "95% CI lower", "95% CI upper", "p value")
return(res)
})
res <- t(as.data.frame(univ_results, check.names=FALSE))
as.data.frame(res)
kable(res, caption="Cox PH HR using uniivariate model")  %>%
kable_styling(bootstrap_options = "striped", full_width = FALSE) %>%
column_spec(1, width="6cm")
#run each cox ph model
covariates <- c("age", "male", "donorage", "donormale", "cmv", "donorcmv", "waittime", "disgroup", "fab", "mtx")
univ_formulas <- sapply(covariates,
function(x) as.formula(paste('surv.luke.1 ~', x)))
univ_models <- lapply(univ_formulas, function(x){coxph(x, data=data)})
#get results
univ_results <- lapply(univ_models,
function(x){
x <- summary(x)
#p.value <- signif(x$wald["pvalue"], digits=3)
p.value <- round(x$wald["pvalue"], 3)
wald.test <- round(x$wald["test"], 3)
beta <- signif(x$coef[1], 3);
HR <- round(x$coef[2], 3);
HR.confint.lower <- round(x$conf.int[,"lower .95"], 3)
HR.confint.upper <- round(x$conf.int[,"upper .95"], 3)
#HR <- paste0(HR, " (",
#             HR.confint.lower, "-", HR.confint.upper, ")")
#res <- c(beta, HR, wald.test, p.value)       only including HR, 95% CI, and p value
res <- c(HR, HR.confint.lower, HR.confint.upper, p.value)
#names(res) <- c("beta", "HR (95% CI for HR", "wald.test", "p.value")
names(res) <- c("HR", "95% CI lower", "95% CI upper", "p value")
return(res)
})
res <- t(as.data.frame(univ_results, check.names=FALSE))
as.data.frame(res)
kable(res, caption="Cox PH HR using uniivariate model")  %>%
kable_styling(bootstrap_options = "striped", full_width = FALSE) %>%
column_spec(1, width="4cm")
p.value <- as.data.frame(summary(model.base.1)$coefficients[,5])
HR <- as.data.frame(summary(model.base.1)$coefficients[,2])
conf.int.low <- as.data.frame(summary(model.base.1)$conf.int[,3])
conf.int.high <- as.data.frame(summary(model.base.1)$conf.int[,4])
est <- cbind(HR, conf.int.low, conf.int.high, p.value)
names(est) <- c("HR", "HR 95% CI low", "HR 95% CI high", "p value")
est <- round(est, digits=3)
est
kable(est, caption="Cox PH HR using multivariate model")  %>%
kable_styling(bootstrap_options = "striped", full_width = FALSE) %>%
column_spec(1, width="4cm")
#run each cox ph model
covariates <- c("age", "male", "donorage", "donormale", "cmv", "donorcmv", "waittime", "disgroup", "fab", "mtx")
univ_formulas <- sapply(covariates,
function(x) as.formula(paste('surv.luke.1 ~', x)))
univ_models <- lapply(univ_formulas, function(x){coxph(x, data=data)})
#get results
univ_results <- lapply(univ_models,
function(x){
x <- summary(x)
#p.value <- signif(x$wald["pvalue"], digits=3)
p.value <- round(x$wald["pvalue"], 3)
wald.test <- round(x$wald["test"], 3)
beta <- signif(x$coef[1], 3);
HR <- round(x$coef[2], 3);
HR.confint.lower <- round(x$conf.int[,"lower .95"], 3)
HR.confint.upper <- round(x$conf.int[,"upper .95"], 3)
#HR <- paste0(HR, " (",
#             HR.confint.lower, "-", HR.confint.upper, ")")
#res <- c(beta, HR, wald.test, p.value)       only including HR, 95% CI, and p value
res <- c(HR, HR.confint.lower, HR.confint.upper, p.value)
#names(res) <- c("beta", "HR (95% CI for HR", "wald.test", "p.value")
names(res) <- c("HR", "95% CI lower", "95% CI upper", "p value")
return(res)
})
res <- t(as.data.frame(univ_results, check.names=FALSE))
as.data.frame(res)
kable(res, caption="Cox PH HR using univariate model")  %>%
kable_styling(bootstrap_options = "striped", full_width = FALSE) %>%
column_spec(1, width="4cm")
survfit.luke.1 <- survfit(surv.luke.1 ~ 1, data=data, conf.type="log-log")
summary(survfit.luke.1)
#fit KM curve
survfit.luke.1 <- survfit(surv.luke.1 ~ 1, data=data, conf.type="log-log")
summary(survfit.luke.1)
plot(survfit.luke.1,
conf.int=TRUE,
main="Kaplan-Meier survival estimate (includes 95% CI",
ylab = "Survival probability",
xlab = "Time (days)",
col = c("blue", "light blue", "light blue"),
lty = c("solid", "dashed", "dashed"),
lwd = c(2,1,1),
caption = "caption here"
plot(survfit.luke.1,
conf.int=TRUE,
main="Kaplan-Meier survival estimate (includes 95% CI",
ylab = "Survival probability",
xlab = "Time (days)",
col = c("blue", "light blue", "light blue"),
lty = c("solid", "dashed", "dashed"),
lwd = c(2,1,1),
caption = "caption here")
plot(survfit.luke.1,
conf.int=TRUE,
main="KM survival estimate of entire cohort (includes 95% CI"),
plot(survfit.luke.1,
conf.int=TRUE,
main="KM survival estimate of entire cohort (includes 95% CI)",
ylab = "Survival probability",
xlab = "Time (days)",
col = c("blue", "light blue", "light blue"),
lty = c("solid", "dashed", "dashed"),
lwd = c(2,1,1),
caption = "caption here")
plot(survfit.luke.1,
conf.int=TRUE,
main="KM survival estimate of entire cohort (includes 95% CI)",
ylab = "Survival probability",
xlab = "Time (days)",
col = c("blue", "light blue", "light blue"),
lty = c("solid", "dashed", "dashed"),
lwd = c(2,1,1))
summary(surfit.luke.1)$table
summary(survfit.luke.1)$table
#plot KM curve
plot(survfit.luke.1,
conf.int=TRUE,
main="KM survival estimate of entire cohort (includes 95% CI)",
ylab = "Survival probability",
xlab = "Time (days)",
col = c("blue", "light blue", "light blue"),
lty = c("solid", "dashed", "dashed"),
lwd = c(2,1,1))
if (!require(knitr)) install.packages("knitr")
library(knitr)
knitr::opts_chunk$set(echo = FALSE)
if (!require(kableExtra)) install.packages("kableExtra")
if (!require(flexsurv)) install.packages("flexsurv")
if (!require(survMisc)) install.packages("survMisc")
if (!require(msm)) install.packages("msm")
if (!require(tidyverse)) install.packages("tidyverse")
if (!require(tableone)) install.packages("tableone")
library(tidyverse)
library(knitr)
library(kableExtra)
#source("getmedianres.R")
library(survival)
library(flexsurv)
library(survMisc) # for Wilcoxon-Gehan-Breslow test
library(msm)
library(tableone)
link = "https://github.com/dmccoomes/Survival/raw/master/Final%20Project/Data/bmt.csv"
data <- read.csv(url(link), header=TRUE)
surv.luke.1 <- Surv(time=data$tdfs, event=data$deltadfs, type="right")
#fit KM curve
survfit.luke.1 <- survfit(surv.luke.1 ~ 1, data=data, conf.type="log-log")
summary(survfit.luke.1)
#plot KM curve
plot(survfit.luke.1,
conf.int=TRUE,
main="KM survival estimate of entire cohort (includes 95% CI)",
ylab = "Survival probability",
xlab = "Time (days)",
col = c("blue", "light blue", "light blue"),
lty = c("solid", "dashed", "dashed"),
lwd = c(2,1,1))
summary(survfit.luke.1)$table
#run each cox ph model
covariates <- c("age", "male", "donorage", "donormale", "cmv", "donorcmv", "waittime", "disgroup", "fab", "mtx")
univ_formulas <- sapply(covariates,
function(x) as.formula(paste('surv.luke.1 ~', x)))
univ_models <- lapply(univ_formulas, function(x){coxph(x, data=data)})
#get results
univ_results <- lapply(univ_models,
function(x){
x <- summary(x)
#p.value <- signif(x$wald["pvalue"], digits=3)
p.value <- round(x$wald["pvalue"], 3)
wald.test <- round(x$wald["test"], 3)
beta <- signif(x$coef[1], 3);
HR <- round(x$coef[2], 3);
HR.confint.lower <- round(x$conf.int[,"lower .95"], 3)
HR.confint.upper <- round(x$conf.int[,"upper .95"], 3)
#HR <- paste0(HR, " (",
#             HR.confint.lower, "-", HR.confint.upper, ")")
#res <- c(beta, HR, wald.test, p.value)       only including HR, 95% CI, and p value
res <- c(HR, HR.confint.lower, HR.confint.upper, p.value)
#names(res) <- c("beta", "HR (95% CI for HR", "wald.test", "p.value")
names(res) <- c("HR", "95% CI lower", "95% CI upper", "p value")
return(res)
})
res <- t(as.data.frame(univ_results, check.names=FALSE))
#as.data.frame(res)
kable(res, caption="Cox PH HR using univariate model")  %>%
kable_styling(bootstrap_options = "striped", full_width = FALSE, position="left") %>%
column_spec(1, width="4cm") %>%
row_spec(9, bold=T)
#first, fit a Cox PH model including all baseline covariates
model.base.1 <- coxph(surv.luke.1 ~ age + male + donorage + donormale + cmv + donorcmv + waittime + disgroup + fab + mtx, data=data)
summary(model.base.1)
#second, are any of these variables associated with difference by themselves - I did this in the box above
model.base.age <- coxph(surv.luke.1 ~ age, data=data)
model.base.male <- coxph(surv.luke.1 ~ male, data=data)
model.base.donorage <- coxph(surv.luke.1 ~ donorage, data=data)
model.base.donormale <- coxph(surv.luke.1 ~ donormale, data=data)
model.base.cmv <- coxph(surv.luke.1 ~ cmv, data=data)
model.base.donorcmv <- coxph(surv.luke.1 ~ donorcmv, data=data)
model.base.waittime <- coxph(surv.luke.1 ~ waittime, data=data)
model.base.disgroup <- coxph(surv.luke.1 ~ disgroup, data=data)
model.base.fab <- coxph(surv.luke.1 ~ fab, data=data)
model.base.mtx <- coxph(surv.luke.1 ~ mtx, data=data)
summary(model.base.age)
summary(model.base.male)
summary(model.base.donorage)
summary(model.base.donormale)
summary(model.base.cmv)
summary(model.base.donorcmv)
summary(model.base.waittime)
summary(model.base.disgroup)
summary(model.base.fab)
summary(model.base.mtx)
#build table of z-scores for individual models
summary(model.base.1)
p.value <- as.data.frame(summary(model.base.1)$coefficients[,5])
HR <- as.data.frame(summary(model.base.1)$coefficients[,2])
conf.int.low <- as.data.frame(summary(model.base.1)$conf.int[,3])
conf.int.high <- as.data.frame(summary(model.base.1)$conf.int[,4])
est <- cbind(HR, conf.int.low, conf.int.high, p.value)
names(est) <- c("HR", "HR 95% CI low", "HR 95% CI high", "p value")
est <- round(est, digits=3)
#est
kable(est, caption="Cox PH HR using multivariate model")  %>%
kable_styling(bootstrap_options = "striped", full_width = FALSE, position="left") %>%
column_spec(1, width="4cm") %>%
row_spec(9, bold=T)
CreateTableOne(data=data)
install.packages("compareGroups")
library(tidyverse)
library(knitr)
library(kableExtra)
#source("getmedianres.R")
library(survival)
library(flexsurv)
library(survMisc) # for Wilcoxon-Gehan-Breslow test
library(msm)
library(tableone)
libary(compareGroups)
library(tidyverse)
library(knitr)
library(kableExtra)
#source("getmedianres.R")
library(survival)
library(flexsurv)
library(survMisc) # for Wilcoxon-Gehan-Breslow test
library(msm)
library(tableone)
library(compareGroups)
install.packages("table1")
library(tidyverse)
library(knitr)
library(kableExtra)
#source("getmedianres.R")
library(survival)
library(flexsurv)
library(survMisc) # for Wilcoxon-Gehan-Breslow test
library(msm)
library(tableone)
library(compareGroups)
library(table1)
